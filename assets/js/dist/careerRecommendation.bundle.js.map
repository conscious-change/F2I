{"version":3,"file":"careerRecommendation.bundle.js","mappings":"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","sources":["webpack://fed-to-industry/webpack/bootstrap","webpack://fed-to-industry/webpack/runtime/define property getters","webpack://fed-to-industry/webpack/runtime/hasOwnProperty shorthand","webpack://fed-to-industry/webpack/runtime/make namespace object","webpack://fed-to-industry/./assets/js/src/utils/storage.js","webpack://fed-to-industry/./assets/js/src/pages/career-recommendation.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Storage Utility Functions\n * \n * A collection of helper functions for working with localStorage and sessionStorage.\n */\n\n/**\n * Save data to localStorage\n * @param {string} key - Storage key\n * @param {*} value - Value to store (will be JSON stringified)\n * @returns {boolean} - True if successful\n */\nexport const saveToLocalStorage = (key, value) => {\n  try {\n    const serializedValue = JSON.stringify(value);\n    localStorage.setItem(key, serializedValue);\n    return true;\n  } catch (error) {\n    console.error('Error saving to localStorage:', error);\n    return false;\n  }\n};\n\n/**\n * Get data from localStorage\n * @param {string} key - Storage key\n * @param {*} defaultValue - Default value if key doesn't exist\n * @returns {*} - Retrieved value or defaultValue\n */\nexport const getFromLocalStorage = (key, defaultValue = null) => {\n  try {\n    const serializedValue = localStorage.getItem(key);\n    if (serializedValue === null) {\n      return defaultValue;\n    }\n    return JSON.parse(serializedValue);\n  } catch (error) {\n    console.error('Error getting from localStorage:', error);\n    return defaultValue;\n  }\n};\n\n/**\n * Remove data from localStorage\n * @param {string} key - Storage key to remove\n */\nexport const removeFromLocalStorage = (key) => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.error('Error removing from localStorage:', error);\n  }\n};\n\n/**\n * Clear all data from localStorage\n */\nexport const clearLocalStorage = () => {\n  try {\n    localStorage.clear();\n  } catch (error) {\n    console.error('Error clearing localStorage:', error);\n  }\n};\n\nexport default {\n  saveToLocalStorage,\n  getFromLocalStorage,\n  removeFromLocalStorage,\n  clearLocalStorage\n};\n","/**\n * Career Recommendation Page JavaScript\n * \n * This file contains the JavaScript for the Career Recommendation page.\n */\n\n// Import utilities\nimport { getFromLocalStorage, saveToLocalStorage } from '../utils/storage';\n\n/**\n * User Assessment Profile class\n */\nclass UserAssessmentProfile {\n  constructor() {\n    this.coreTechnicalSkills = {};\n    this.agencySkills = [];\n    this.softwareTools = [];\n    this.leadershipSkills = {};\n    this.problemSolvingSkills = {};\n    this.communicationSkills = {};\n    this.achievements = [];\n    this.starStories = [];\n    this.industrySkills = [];\n    this.terminology = [];\n    this.industryAnalysis = {};\n  }\n  \n  /**\n   * Populate profile from self-assessment data\n   */\n  populateFromSelfAssessment(assessmentData) {\n    // Copy assessment data to profile\n    this.coreTechnicalSkills = assessmentData.coreTechnicalSkills || {};\n    this.agencySkills = assessmentData.agencySkills || [];\n    this.softwareTools = assessmentData.softwareTools || [];\n    this.leadershipSkills = assessmentData.leadershipSkills || {};\n    this.problemSolvingSkills = assessmentData.problemSolvingSkills || {};\n    this.communicationSkills = assessmentData.communicationSkills || {};\n    this.achievements = assessmentData.achievements || [];\n    this.starStories = assessmentData.starStories || [];\n    this.industrySkills = assessmentData.industrySkills || [];\n    this.terminology = assessmentData.terminology || [];\n    this.industryAnalysis = assessmentData.industryAnalysis || {};\n  }\n  \n  /**\n   * Get skill gaps\n   */\n  getSkillGaps() {\n    const gaps = [];\n    \n    // Check core technical skills\n    for (const [skillId, rating] of Object.entries(this.coreTechnicalSkills)) {\n      if (parseInt(rating, 10) < 3) {\n        gaps.push({\n          name: skillId,\n          type: 'technical',\n          rating: parseInt(rating, 10)\n        });\n      }\n    }\n    \n    // Check leadership skills\n    for (const [skillId, rating] of Object.entries(this.leadershipSkills)) {\n      if (parseInt(rating, 10) < 3) {\n        gaps.push({\n          name: skillId,\n          type: 'leadership',\n          rating: parseInt(rating, 10)\n        });\n      }\n    }\n    \n    return gaps;\n  }\n  \n  /**\n   * Get top skills\n   */\n  getTopSkills() {\n    const skills = [];\n    \n    // Check core technical skills\n    for (const [skillId, rating] of Object.entries(this.coreTechnicalSkills)) {\n      if (parseInt(rating, 10) >= 4) {\n        skills.push({\n          name: skillId,\n          type: 'technical',\n          rating: parseInt(rating, 10)\n        });\n      }\n    }\n    \n    // Check leadership skills\n    for (const [skillId, rating] of Object.entries(this.leadershipSkills)) {\n      if (parseInt(rating, 10) >= 4) {\n        skills.push({\n          name: skillId,\n          type: 'leadership',\n          rating: parseInt(rating, 10)\n        });\n      }\n    }\n    \n    // Sort by rating (highest first)\n    return skills.sort((a, b) => b.rating - a.rating);\n  }\n}\n\n/**\n * Initialize the page\n */\nfunction initPage() {\n  console.log('Career Recommendation page initialized');\n  \n  // Get DOM elements\n  const loadSampleDataBtn = document.getElementById('load-sample-data');\n  const loadSavedDataBtn = document.getElementById('load-saved-data');\n  const loadJsonDataBtn = document.getElementById('load-json-data');\n  const profileDataElement = document.getElementById('profile-data');\n  const careerMatchesElement = document.getElementById('career-matches');\n  const careerDetailsElement = document.getElementById('career-details');\n  \n  // Career database (simplified for example)\n  const careerDatabase = [\n    {\n      id: 'software-developer',\n      title: 'Software Developer',\n      description: 'Designs, builds, and maintains software applications and systems.',\n      federalTransition: 'Strong transition path for those with IT, cybersecurity, or intelligence backgrounds.',\n      requiredSkills: {\n        technical: {\n          programming: 5,\n          problem_solving: 4,\n          software_development: 5,\n          database_management: 3,\n          cybersecurity: 2\n        },\n        soft: {\n          communication: 3,\n          teamwork: 4,\n          attention_to_detail: 4,\n          adaptability: 3\n        }\n      },\n      careerInfo: {\n        medianSalary: '$110,000 per year',\n        jobGrowth: '22% (Much faster than average)',\n        entryRequirements: 'Bachelor\\'s degree in Computer Science or related field; certifications like AWS, Azure, or CompTIA can be beneficial.'\n      },\n      transitionTips: [\n        'Highlight technical skills from military service, especially any programming or system administration experience.',\n        'Emphasize problem-solving abilities and experience working under pressure.',\n        'Consider obtaining industry-recognized certifications to validate your skills.',\n        'Build a portfolio of projects to demonstrate your coding abilities.'\n      ]\n    },\n    {\n      id: 'project-manager',\n      title: 'Project Manager',\n      description: 'Plans, executes, and closes projects, ensuring they are completed on time and within budget.',\n      federalTransition: 'Excellent transition path for military officers and NCOs with leadership experience.',\n      requiredSkills: {\n        technical: {\n          project_planning: 5,\n          risk_management: 4,\n          budgeting: 4,\n          scheduling: 4,\n          resource_allocation: 3\n        },\n        soft: {\n          leadership: 5,\n          communication: 4,\n          problem_solving: 4,\n          adaptability: 3,\n          conflict_resolution: 4\n        }\n      },\n      careerInfo: {\n        medianSalary: '$95,000 per year',\n        jobGrowth: '8% (As fast as average)',\n        entryRequirements: 'Bachelor\\'s degree; PMP certification highly valued; 3-5 years of experience in project coordination or management.'\n      },\n      transitionTips: [\n        'Translate military leadership experience into civilian project management terminology.',\n        'Highlight experience managing resources, personnel, and budgets.',\n        'Consider obtaining PMP or Agile certification to validate your skills.',\n        'Emphasize experience with planning complex operations and managing risk.'\n      ]\n    },\n    {\n      id: 'cybersecurity-analyst',\n      title: 'Cybersecurity Analyst',\n      description: 'Protects computer systems and networks from information disclosure, theft, or damage.',\n      federalTransition: 'Excellent transition path for those with military intelligence, IT, or security backgrounds.',\n      requiredSkills: {\n        technical: {\n          network_security: 5,\n          threat_analysis: 4,\n          security_tools: 4,\n          incident_response: 4,\n          programming: 3\n        },\n        soft: {\n          analytical_thinking: 5,\n          attention_to_detail: 5,\n          communication: 3,\n          problem_solving: 4\n        }\n      },\n      careerInfo: {\n        medianSalary: '$103,000 per year',\n        jobGrowth: '35% (Much faster than average)',\n        entryRequirements: 'Bachelor\\'s degree in Cybersecurity or related field; certifications like CISSP, CEH, or Security+ highly valued.'\n      },\n      transitionTips: [\n        'Highlight security clearances and experience with secure communications.',\n        'Emphasize experience protecting sensitive information and systems.',\n        'Consider obtaining industry-recognized certifications like Security+, CEH, or CISSP.',\n        'Translate military security protocols and procedures to civilian cybersecurity concepts.'\n      ]\n    }\n  ];\n  \n  // Selected career\n  let selectedCareer = null;\n  \n  // Add event listeners\n  if (loadSampleDataBtn) {\n    loadSampleDataBtn.addEventListener('click', loadSampleData);\n  }\n  \n  if (loadSavedDataBtn) {\n    loadSavedDataBtn.addEventListener('click', loadSavedData);\n  }\n  \n  if (loadJsonDataBtn) {\n    loadJsonDataBtn.addEventListener('click', showJsonInputModal);\n  }\n  \n  /**\n   * Load sample assessment data\n   */\n  function loadSampleData() {\n    console.log('Loading sample data...');\n    \n    // Use XMLHttpRequest to load the sample file\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', '/assets/data/f2i-self-assessment-template.json', true);\n    xhr.onload = function() {\n      if (xhr.status === 200) {\n        console.log('Sample data loaded successfully');\n        const assessmentData = JSON.parse(xhr.responseText);\n        const profile = new UserAssessmentProfile();\n        profile.populateFromSelfAssessment(assessmentData);\n        displayProfileData(profile);\n      } else {\n        console.error('Error loading sample data:', xhr.statusText);\n        // Try the fallback file if the template doesn't exist\n        console.log('Trying fallback location...');\n        const fallbackXhr = new XMLHttpRequest();\n        fallbackXhr.open('GET', '/changes_logs/extra/f2i-self-assessment-template.json', true);\n        fallbackXhr.onload = function() {\n          if (fallbackXhr.status === 200) {\n            console.log('Fallback sample data loaded successfully');\n            const assessmentData = JSON.parse(fallbackXhr.responseText);\n            const profile = new UserAssessmentProfile();\n            profile.populateFromSelfAssessment(assessmentData);\n            displayProfileData(profile);\n          } else {\n            console.error('Error loading fallback sample data:', fallbackXhr.statusText);\n            alert('Could not load sample data. Please try uploading your own assessment data.');\n          }\n        };\n        fallbackXhr.send();\n      }\n    };\n    xhr.send();\n  }\n  \n  /**\n   * Load saved assessment data from localStorage\n   */\n  function loadSavedData() {\n    console.log('Loading saved data...');\n    \n    const savedData = getFromLocalStorage('f2i-assessment-data');\n    \n    if (savedData) {\n      try {\n        const assessmentData = JSON.parse(savedData);\n        const profile = new UserAssessmentProfile();\n        profile.populateFromSelfAssessment(assessmentData);\n        displayProfileData(profile);\n      } catch (error) {\n        console.error('Error parsing saved data:', error);\n        alert('Could not load saved data. The data may be corrupted.');\n      }\n    } else {\n      alert('No saved assessment data found. Please complete the self-assessment first.');\n    }\n  }\n  \n  /**\n   * Show modal for JSON input\n   */\n  function showJsonInputModal() {\n    console.log('Showing JSON input modal...');\n    \n    // Create modal container\n    const modal = document.createElement('div');\n    modal.className = 'json-input-modal';\n    modal.style.position = 'fixed';\n    modal.style.top = '0';\n    modal.style.left = '0';\n    modal.style.width = '100%';\n    modal.style.height = '100%';\n    modal.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';\n    modal.style.display = 'flex';\n    modal.style.justifyContent = 'center';\n    modal.style.alignItems = 'center';\n    modal.style.zIndex = '1000';\n    \n    // Create modal content\n    const modalContent = document.createElement('div');\n    modalContent.className = 'modal-content';\n    modalContent.style.backgroundColor = 'white';\n    modalContent.style.padding = '20px';\n    modalContent.style.borderRadius = '5px';\n    modalContent.style.width = '80%';\n    modalContent.style.maxWidth = '600px';\n    modalContent.style.maxHeight = '80%';\n    modalContent.style.overflow = 'auto';\n    \n    // Create modal header\n    const modalHeader = document.createElement('h3');\n    modalHeader.textContent = 'Paste Your Assessment JSON Data';\n    modalHeader.style.marginTop = '0';\n    \n    // Create textarea\n    const textarea = document.createElement('textarea');\n    textarea.style.width = '100%';\n    textarea.style.height = '200px';\n    textarea.style.marginBottom = '20px';\n    textarea.style.padding = '10px';\n    textarea.style.boxSizing = 'border-box';\n    \n    // Create buttons container\n    const buttonsContainer = document.createElement('div');\n    buttonsContainer.style.display = 'flex';\n    buttonsContainer.style.justifyContent = 'space-between';\n    \n    // Create load button\n    const loadButton = document.createElement('button');\n    loadButton.textContent = 'Load Data';\n    loadButton.style.padding = '10px 20px';\n    loadButton.style.backgroundColor = '#0056b3';\n    loadButton.style.color = 'white';\n    loadButton.style.border = 'none';\n    loadButton.style.borderRadius = '4px';\n    loadButton.style.cursor = 'pointer';\n    \n    // Create cancel button\n    const cancelButton = document.createElement('button');\n    cancelButton.textContent = 'Cancel';\n    cancelButton.style.padding = '10px 20px';\n    cancelButton.style.backgroundColor = '#f44336';\n    cancelButton.style.color = 'white';\n    cancelButton.style.border = 'none';\n    cancelButton.style.borderRadius = '4px';\n    cancelButton.style.cursor = 'pointer';\n    \n    // Add event listeners\n    loadButton.addEventListener('click', function() {\n      const jsonText = textarea.value.trim();\n      if (jsonText) {\n        try {\n          const assessmentData = JSON.parse(jsonText);\n          const profile = new UserAssessmentProfile();\n          profile.populateFromSelfAssessment(assessmentData);\n          displayProfileData(profile);\n          document.body.removeChild(modal);\n        } catch (error) {\n          alert('Invalid JSON data. Please check the format and try again.');\n        }\n      } else {\n        alert('Please paste your JSON data.');\n      }\n    });\n    \n    cancelButton.addEventListener('click', function() {\n      document.body.removeChild(modal);\n    });\n    \n    // Assemble modal\n    buttonsContainer.appendChild(loadButton);\n    buttonsContainer.appendChild(cancelButton);\n    \n    modalContent.appendChild(modalHeader);\n    modalContent.appendChild(textarea);\n    modalContent.appendChild(buttonsContainer);\n    \n    modal.appendChild(modalContent);\n    \n    // Add modal to body\n    document.body.appendChild(modal);\n  }\n  \n  /**\n   * Display profile data\n   */\n  function displayProfileData(profile) {\n    if (profileDataElement) {\n      // Display profile summary\n      const topSkills = profile.getTopSkills().slice(0, 5);\n      const skillGaps = profile.getSkillGaps().slice(0, 5);\n      \n      let html = `\n        <h3>Your Profile Summary</h3>\n        <div class=\"profile-summary\">\n          <div class=\"top-skills\">\n            <h4>Top Skills</h4>\n            <ul>\n      `;\n      \n      if (topSkills.length > 0) {\n        topSkills.forEach(skill => {\n          html += `<li>${skill.name} (${skill.rating}/5)</li>`;\n        });\n      } else {\n        html += `<li>No top skills identified</li>`;\n      }\n      \n      html += `\n            </ul>\n          </div>\n          <div class=\"skill-gaps\">\n            <h4>Skill Gaps</h4>\n            <ul>\n      `;\n      \n      if (skillGaps.length > 0) {\n        skillGaps.forEach(gap => {\n          html += `<li>${gap.name} (${gap.rating}/5)</li>`;\n        });\n      } else {\n        html += `<li>No significant skill gaps identified</li>`;\n      }\n      \n      html += `\n            </ul>\n          </div>\n        </div>\n      `;\n      \n      profileDataElement.innerHTML = html;\n      profileDataElement.style.display = 'block';\n      \n      // Calculate and display career matches\n      calculateCareerMatches(profile);\n    }\n  }\n  \n  /**\n   * Calculate career matches\n   */\n  function calculateCareerMatches(profile) {\n    // Calculate and display career matches\n    const careerMatches = careerDatabase.map(career => {\n      const matchScore = calculateMatchScore(profile, career);\n      return {\n        career: career,\n        score: matchScore\n      };\n    }).sort((a, b) => b.score - a.score);\n    \n    if (careerMatches.length > 0 && careerMatchesElement) {\n      careerMatchesElement.innerHTML = careerMatches.map(match =>\n        `<div class=\"career-match-item\" data-career-id=\"${match.career.id}\">\n          <div class=\"match-score\">${match.score}% Match</div>\n          <div class=\"career-title\">${match.career.title}</div>\n          <div class=\"career-description\">${match.career.description}</div>\n        </div>`\n      ).join('');\n      \n      // Add event listeners to career match items\n      document.querySelectorAll('.career-match-item').forEach(item => {\n        item.addEventListener('click', function() {\n          const careerId = this.getAttribute('data-career-id');\n          const career = careerDatabase.find(c => c.id === careerId);\n          \n          // Update selected state\n          document.querySelectorAll('.career-match-item').forEach(el => {\n            el.classList.remove('selected');\n          });\n          this.classList.add('selected');\n          \n          // Display career details\n          displayCareerDetails(career);\n        });\n      });\n      \n      // Select the first career by default\n      if (careerMatches.length > 0) {\n        const firstCareer = careerMatches[0].career;\n        document.querySelector('.career-match-item').classList.add('selected');\n        displayCareerDetails(firstCareer);\n      }\n      \n      careerMatchesElement.style.display = 'block';\n    }\n  }\n  \n  /**\n   * Calculate match score between profile and career\n   */\n  function calculateMatchScore(profile, career) {\n    let score = 0;\n    let maxScore = 0;\n    \n    // Check technical skills\n    for (const [skill, importance] of Object.entries(career.requiredSkills.technical)) {\n      maxScore += importance;\n      \n      // Normalize skill name to match profile format\n      const normalizedSkillName = skill.toLowerCase().replace(/[^a-z0-9]/g, '_');\n      \n      // Check if profile has this skill\n      if (profile.coreTechnicalSkills[normalizedSkillName]) {\n        const skillRating = parseInt(profile.coreTechnicalSkills[normalizedSkillName], 10);\n        \n        // Weight score by importance\n        score += Math.min(skillRating, importance);\n      }\n    }\n    \n    // Check soft skills\n    for (const [skill, importance] of Object.entries(career.requiredSkills.soft)) {\n      maxScore += importance;\n      \n      // Normalize skill name to match profile format\n      const normalizedSkillName = skill.toLowerCase().replace(/[^a-z0-9]/g, '_');\n      \n      // Check leadership skills\n      if (profile.leadershipSkills[normalizedSkillName]) {\n        const skillRating = parseInt(profile.leadershipSkills[normalizedSkillName], 10);\n        score += Math.min(skillRating, importance);\n      }\n      \n      // Check communication skills\n      else if (profile.communicationSkills[normalizedSkillName]) {\n        const skillRating = parseInt(profile.communicationSkills[normalizedSkillName], 10);\n        score += Math.min(skillRating, importance);\n      }\n      \n      // Check problem solving skills\n      else if (profile.problemSolvingSkills[normalizedSkillName]) {\n        const skillRating = parseInt(profile.problemSolvingSkills[normalizedSkillName], 10);\n        score += Math.min(skillRating, importance);\n      }\n    }\n    \n    // Calculate final percentage score\n    const finalScore = maxScore > 0 ? Math.round((score / maxScore) * 100) : 50;\n    \n    // Adjust score based on skill gaps\n    const skillGaps = profile.getSkillGaps();\n    const criticalGaps = skillGaps.filter(gap => {\n      const normalizedSkillName = gap.name.toLowerCase().replace(/[^a-z0-9]/g, '_');\n      return career.requiredSkills.technical[normalizedSkillName] >= 4;\n    });\n    \n    // Penalize for critical skill gaps\n    if (criticalGaps.length > 0) {\n      return Math.max(finalScore - (criticalGaps.length * 10), 30);\n    }\n    \n    return finalScore;\n  }\n  \n  /**\n   * Display career details\n   */\n  function displayCareerDetails(career) {\n    selectedCareer = career;\n    \n    if (careerDetailsElement) {\n      // Create HTML for career details\n      let html = `\n        <div class=\"career-details-header\">\n          <div class=\"career-details-title\">${career.title}</div>\n          <div class=\"career-details-salary\">${career.careerInfo.medianSalary}</div>\n        </div>\n        \n        <p>${career.description}</p>\n        <p><strong>Federal Transition:</strong> ${career.federalTransition}</p>\n        \n        <h4>Required Technical Skills</h4>\n        <ul class=\"skills-list\">\n      `;\n      \n      // Add technical skills\n      const technicalSkills = Object.entries(career.requiredSkills.technical)\n        .filter(([_, rating]) => rating >= 3)\n        .sort((a, b) => b[1] - a[1]);\n      \n      technicalSkills.forEach(([skill, rating]) => {\n        html += `\n          <li>\n            <span class=\"skill-name\">${skill.replace(/_/g, ' ')}</span>\n            <span class=\"skill-rating\">\n              ${'★'.repeat(rating)}${'☆'.repeat(5 - rating)}\n            </span>\n          </li>\n        `;\n      });\n      \n      html += `\n        </ul>\n        \n        <h4>Required Soft Skills</h4>\n        <ul class=\"skills-list\">\n      `;\n      \n      // Add soft skills\n      const softSkills = Object.entries(career.requiredSkills.soft)\n        .filter(([_, rating]) => rating >= 3)\n        .sort((a, b) => b[1] - a[1]);\n      \n      softSkills.forEach(([skill, rating]) => {\n        html += `\n          <li>\n            <span class=\"skill-name\">${skill.replace(/_/g, ' ')}</span>\n            <span class=\"skill-rating\">\n              ${'★'.repeat(rating)}${'☆'.repeat(5 - rating)}\n            </span>\n          </li>\n        `;\n      });\n      \n      html += `\n        </ul>\n        \n        <div class=\"career-info\">\n          <div class=\"career-info-item\">\n            <div class=\"career-info-label\">Median Salary</div>\n            <div class=\"career-info-value\">${career.careerInfo.medianSalary}</div>\n          </div>\n          <div class=\"career-info-item\">\n            <div class=\"career-info-label\">Job Growth</div>\n            <div class=\"career-info-value\">${career.careerInfo.jobGrowth}</div>\n          </div>\n          <div class=\"career-info-item\">\n            <div class=\"career-info-label\">Entry Requirements</div>\n            <div class=\"career-info-value\">${career.careerInfo.entryRequirements}</div>\n          </div>\n        </div>\n        \n        <h4>Federal-to-Private Transition Tips</h4>\n        <ul class=\"tips-list\">\n      `;\n      \n      // Add transition tips\n      if (career.transitionTips && career.transitionTips.length > 0) {\n        career.transitionTips.forEach(tip => {\n          html += `<li>${tip}</li>`;\n        });\n      } else {\n        html += `<li>No specific transition tips available.</li>`;\n      }\n      \n      html += `\n        </ul>\n      `;\n      \n      careerDetailsElement.innerHTML = html;\n      careerDetailsElement.style.display = 'block';\n    }\n  }\n}\n\n// Initialize the page when DOM is ready\ndocument.addEventListener('DOMContentLoaded', initPage);\n\nexport default {\n  initPage,\n  UserAssessmentProfile\n};\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","getFromLocalStorage","defaultValue","arguments","length","undefined","serializedValue","localStorage","getItem","JSON","parse","error","UserAssessmentProfile","_classCallCheck","this","coreTechnicalSkills","agencySkills","softwareTools","leadershipSkills","problemSolvingSkills","communicationSkills","achievements","starStories","industrySkills","terminology","industryAnalysis","assessmentData","gaps","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray","skillId","rating","parseInt","push","name","type","_i2","_Object$entries2","_Object$entries2$_i","skills","_i3","_Object$entries3","_Object$entries3$_i","_i4","_Object$entries4","_Object$entries4$_i","sort","a","b","initPage","loadSampleDataBtn","document","getElementById","loadSavedDataBtn","loadJsonDataBtn","profileDataElement","careerMatchesElement","careerDetailsElement","careerDatabase","id","title","description","federalTransition","requiredSkills","technical","programming","problem_solving","software_development","database_management","cybersecurity","soft","communication","teamwork","attention_to_detail","adaptability","careerInfo","medianSalary","jobGrowth","entryRequirements","transitionTips","project_planning","risk_management","budgeting","scheduling","resource_allocation","leadership","conflict_resolution","network_security","threat_analysis","security_tools","incident_response","analytical_thinking","displayProfileData","profile","topSkills","getTopSkills","slice","skillGaps","getSkillGaps","html","forEach","skill","concat","gap","innerHTML","style","display","careerMatches","map","career","matchScore","score","maxScore","_i5","_Object$entries5","_Object$entries5$_i","importance","normalizedSkillName","toLowerCase","replace","skillRating","Math","min","_i6","_Object$entries6","_Object$entries6$_i","finalScore","round","criticalGaps","filter","max","calculateMatchScore","match","join","querySelectorAll","item","addEventListener","careerId","getAttribute","find","c","el","classList","remove","add","displayCareerDetails","firstCareer","querySelector","calculateCareerMatches","_ref","_ref2","_ref3","_ref4","repeat","_ref5","_ref6","_ref7","_ref8","tip","xhr","XMLHttpRequest","open","onload","status","responseText","populateFromSelfAssessment","fallbackXhr","alert","send","savedData","modal","createElement","className","position","top","left","width","height","backgroundColor","justifyContent","alignItems","zIndex","modalContent","padding","borderRadius","maxWidth","maxHeight","overflow","modalHeader","textContent","marginTop","textarea","marginBottom","boxSizing","buttonsContainer","loadButton","color","border","cursor","cancelButton","jsonText","trim","body","removeChild","appendChild"],"sourceRoot":""}