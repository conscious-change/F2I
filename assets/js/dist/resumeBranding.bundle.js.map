{"version":3,"file":"resumeBranding.bundle.js","mappings":"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","sources":["webpack://fed-to-industry/webpack/runtime/chunk loaded","webpack://fed-to-industry/./assets/js/src/pages/resume-branding.js","webpack://fed-to-industry/webpack/bootstrap","webpack://fed-to-industry/webpack/runtime/define property getters","webpack://fed-to-industry/webpack/runtime/hasOwnProperty shorthand","webpack://fed-to-industry/webpack/runtime/make namespace object","webpack://fed-to-industry/webpack/runtime/runtimeId","webpack://fed-to-industry/webpack/runtime/jsonp chunk loading","webpack://fed-to-industry/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/**\n * Resume & Personal Branding Page JavaScript\n *\n * This file contains the JavaScript for the Resume & Personal Branding page.\n */\n\n// Import components\nimport Accordion from '../components/accordion';\nimport Testimonials from '../components/testimonials';\nimport Tabs from '../components/tabs';\nimport { getFromLocalStorage, saveToLocalStorage } from '../utils/storage';\n\n/**\n * Initialize the page\n */\nfunction initPage() {\n  console.log('Resume & Personal Branding page initialized');\n\n  // Initialize accordion for FAQ sections\n  Accordion.init({\n    triggerSelector: '.faq-question',\n    contentSelector: '.faq-answer',\n    closeOthers: true,\n    animateHeight: true\n  });\n\n  // Initialize accordion for resume tips\n  initializeResumeAccordion();\n\n  // Initialize tabs\n  Tabs.init({\n    tabsContainerSelector: '.resume-transformation-tabs',\n    tabButtonSelector: '.tab-button',\n    tabPanelSelector: '.tab-panel',\n    activeClass: 'active'\n  });\n\n  // Initialize testimonials\n  Testimonials.init({\n    testimonialSelector: '.testimonial',\n    dotSelector: '.testimonial-dot',\n    activeClass: 'active',\n    autoRotate: true,\n    autoRotateInterval: 5000\n  });\n\n  // Set up resume template download buttons\n  setupDownloadButtons();\n\n  // Set up resume checklist\n  setupResumeChecklist();\n\n  // Set up value proposition worksheet\n  setupValuePropositionWorksheet();\n\n  // Set up achievement builder\n  setupAchievementBuilder();\n\n  // Set up term translator\n  setupTermTranslator();\n\n  // Set up LinkedIn checklist\n  setupLinkedInChecklist();\n\n  // Set up elevator pitch builder\n  setupElevatorPitchBuilder();\n}\n\n/**\n * Initialize accordion for resume tips\n */\nfunction initializeResumeAccordion() {\n  const accordionHeaders = document.querySelectorAll('.accordion-header');\n\n  accordionHeaders.forEach(header => {\n    header.addEventListener('click', function() {\n      // Toggle active class on the header\n      this.classList.toggle('active');\n\n      // Get the content element\n      const content = this.nextElementSibling;\n\n      // Toggle the content visibility\n      if (content.style.maxHeight) {\n        content.style.maxHeight = null;\n        // Update the toggle icon\n        const toggleIcon = this.querySelector('.accordion-toggle');\n        if (toggleIcon) {\n          toggleIcon.textContent = '+';\n        }\n      } else {\n        content.style.maxHeight = content.scrollHeight + 'px';\n        // Update the toggle icon\n        const toggleIcon = this.querySelector('.accordion-toggle');\n        if (toggleIcon) {\n          toggleIcon.textContent = '-';\n        }\n      }\n    });\n  });\n}\n\n/**\n * Set up resume template download buttons\n */\nfunction setupDownloadButtons() {\n  const downloadButtons = document.querySelectorAll('.template-download-btn');\n\n  downloadButtons.forEach(button => {\n    button.addEventListener('click', function(e) {\n      const templateUrl = this.getAttribute('data-template-url');\n      if (templateUrl) {\n        // Track download event\n        console.log('Template downloaded:', templateUrl);\n      }\n    });\n  });\n}\n\n/**\n * Set up resume checklist\n */\nfunction setupResumeChecklist() {\n  const checklistItems = document.querySelectorAll('.resume-checklist-item input[type=\"checkbox\"]');\n  const progressBar = document.querySelector('.resume-checklist-progress-bar');\n\n  if (checklistItems.length > 0 && progressBar) {\n    // Update progress when checkbox is clicked\n    checklistItems.forEach(item => {\n      item.addEventListener('change', updateChecklistProgress);\n    });\n\n    // Initial progress update\n    updateChecklistProgress();\n  }\n\n  /**\n   * Update checklist progress\n   */\n  function updateChecklistProgress() {\n    const total = checklistItems.length;\n    const checked = Array.from(checklistItems).filter(item => item.checked).length;\n    const percentage = Math.round((checked / total) * 100);\n\n    if (progressBar) {\n      progressBar.style.width = `${percentage}%`;\n      progressBar.setAttribute('aria-valuenow', percentage);\n    }\n\n    // Update progress text if it exists\n    const progressText = document.querySelector('.resume-checklist-progress-text');\n    if (progressText) {\n      progressText.textContent = `${percentage}% Complete`;\n    }\n  }\n}\n\n/**\n * Set up value proposition worksheet\n */\nfunction setupValuePropositionWorksheet() {\n  // Value Proposition Worksheet Modal\n  const valuePropositionButton = document.getElementById('openValuePropositionWorksheet');\n  const valuePropositionModal = document.getElementById('valuePropositionModal');\n\n  if (valuePropositionButton && valuePropositionModal) {\n    valuePropositionButton.addEventListener('click', function() {\n      valuePropositionModal.style.display = \"block\";\n      loadValuePropositionWorksheet();\n    });\n  }\n\n  // Close buttons for all modals\n  const closeButtons = document.getElementsByClassName('close-modal');\n  for (let i = 0; i < closeButtons.length; i++) {\n    closeButtons[i].addEventListener('click', function() {\n      const modal = this.closest('.modal');\n      if (modal) {\n        modal.style.display = \"none\";\n      }\n    });\n  }\n\n  // Generate value proposition\n  const generateValuePropositionButton = document.getElementById('generateValueProposition');\n  if (generateValuePropositionButton) {\n    generateValuePropositionButton.addEventListener('click', function() {\n      const target = document.getElementById('valuePropositionTarget').value;\n      const problem = document.getElementById('valuePropositionProblem').value;\n      const skills = document.getElementById('valuePropositionSkills').value;\n      const benefits = document.getElementById('valuePropositionBenefits').value;\n\n      if (!target || !problem || !skills || !benefits) {\n        alert('Please complete all fields in the Value Proposition Statement section.');\n        return;\n      }\n\n      const valueProposition = `I help ${target} to ${problem} by leveraging my ${skills}, which results in ${benefits}`;\n\n      const valuePropositionResult = document.getElementById('valuePropositionResult');\n      if (valuePropositionResult) {\n        valuePropositionResult.textContent = valueProposition;\n      }\n\n      // Save worksheet data to localStorage\n      saveWorksheetData();\n    });\n  }\n\n  // Copy value proposition to clipboard\n  const copyValuePropositionButton = document.getElementById('copyValueProposition');\n  if (copyValuePropositionButton) {\n    copyValuePropositionButton.addEventListener('click', function() {\n      const valuePropositionResult = document.getElementById('valuePropositionResult');\n      const valueProposition = valuePropositionResult.textContent;\n\n      if (!valueProposition) {\n        alert('Please generate a value proposition first.');\n        return;\n      }\n\n      navigator.clipboard.writeText(valueProposition).then(() => {\n        alert('Value proposition copied to clipboard!');\n      }).catch(err => {\n        console.error('Could not copy text: ', err);\n      });\n    });\n  }\n\n  // Save worksheet data to localStorage\n  function saveWorksheetData() {\n    const worksheetData = {\n      target: document.getElementById('valuePropositionTarget').value,\n      problem: document.getElementById('valuePropositionProblem').value,\n      skills: document.getElementById('valuePropositionSkills').value,\n      benefits: document.getElementById('valuePropositionBenefits').value,\n      industry: document.getElementById('targetIndustry').value,\n      problems: document.getElementById('industryProblems').value,\n      transferableSkills: document.getElementById('transferableSkills').value,\n      strengths: document.getElementById('strengths').value,\n      uniqueExperience: document.getElementById('uniqueExperience').value,\n      valueProposition: document.getElementById('valuePropositionResult').textContent\n    };\n\n    saveToLocalStorage('valuePropositionWorksheet', JSON.stringify(worksheetData));\n  }\n\n  // Load saved worksheet data if available\n  function loadValuePropositionWorksheet() {\n    const savedData = getFromLocalStorage('valuePropositionWorksheet');\n    if (savedData) {\n      try {\n        const data = JSON.parse(savedData);\n\n        // Populate form fields\n        if (data.target) document.getElementById('valuePropositionTarget').value = data.target;\n        if (data.problem) document.getElementById('valuePropositionProblem').value = data.problem;\n        if (data.skills) document.getElementById('valuePropositionSkills').value = data.skills;\n        if (data.benefits) document.getElementById('valuePropositionBenefits').value = data.benefits;\n        if (data.industry) document.getElementById('targetIndustry').value = data.industry;\n        if (data.problems) document.getElementById('industryProblems').value = data.problems;\n        if (data.transferableSkills) document.getElementById('transferableSkills').value = data.transferableSkills;\n        if (data.strengths) document.getElementById('strengths').value = data.strengths;\n        if (data.uniqueExperience) document.getElementById('uniqueExperience').value = data.uniqueExperience;\n\n        // Populate result if available\n        if (data.valueProposition) {\n          const valuePropositionResult = document.getElementById('valuePropositionResult');\n          if (valuePropositionResult) {\n            valuePropositionResult.textContent = data.valueProposition;\n          }\n        }\n      } catch (error) {\n        console.error('Error loading saved value proposition worksheet data:', error);\n      }\n    }\n  }\n}\n\n/**\n * Set up achievement builder\n */\nfunction setupAchievementBuilder() {\n  // Achievement Builder Modal\n  const achievementBuilderButton = document.getElementById('openAchievementBuilder');\n  const achievementBuilderModal = document.getElementById('achievementBuilderModal');\n\n  if (achievementBuilderButton && achievementBuilderModal) {\n    achievementBuilderButton.addEventListener('click', function() {\n      achievementBuilderModal.style.display = \"block\";\n    });\n  }\n\n  // Generate achievement statement\n  const generateStatementButton = document.getElementById('generateStatement');\n  if (generateStatementButton) {\n    generateStatementButton.addEventListener('click', function() {\n      const challenge = document.getElementById('challenge').value;\n      const action = document.getElementById('action').value;\n      const result = document.getElementById('result').value;\n      const actionVerb = document.getElementById('actionVerb').value;\n\n      if (!challenge || !action || !result || !actionVerb) {\n        alert('Please fill in all fields to generate a statement.');\n        return;\n      }\n\n      const statement = `${actionVerb} ${action} to address ${challenge}, resulting in ${result}.`;\n      document.getElementById('statementResult').textContent = statement;\n    });\n  }\n\n  // Copy statement to clipboard\n  const copyStatementButton = document.getElementById('copyStatement');\n  if (copyStatementButton) {\n    copyStatementButton.addEventListener('click', function() {\n      const statementResult = document.getElementById('statementResult');\n      const statement = statementResult.textContent;\n\n      if (!statement) {\n        alert('Please generate a statement first.');\n        return;\n      }\n\n      navigator.clipboard.writeText(statement).then(() => {\n        alert('Statement copied to clipboard!');\n      }).catch(err => {\n        console.error('Could not copy text: ', err);\n      });\n    });\n  }\n}\n\n/**\n * Set up term translator - REMOVED\n */\nfunction setupTermTranslator() {\n  // Term Translator functionality has been removed\n  console.log('Term Translator functionality has been removed');\n}\n\n/**\n * Set up LinkedIn checklist\n */\nfunction setupLinkedInChecklist() {\n  // LinkedIn Profile Checklist Modal\n  const linkedInChecklistButton = document.getElementById('openLinkedInChecklist');\n  const linkedInChecklistModal = document.getElementById('linkedinChecklistModal');\n\n  if (linkedInChecklistButton && linkedInChecklistModal) {\n    linkedInChecklistButton.addEventListener('click', function() {\n      linkedInChecklistModal.style.display = \"block\";\n      loadLinkedInChecklistData();\n      updateLinkedInProgress();\n    });\n  }\n\n  // LinkedIn checkboxes\n  const linkedinCheckboxes = document.querySelectorAll('.linkedin-checkbox');\n\n  linkedinCheckboxes.forEach(checkbox => {\n    checkbox.addEventListener('change', function() {\n      updateLinkedInProgress();\n      saveLinkedInChecklistData();\n    });\n  });\n\n  // Reset LinkedIn checklist\n  const resetLinkedInChecklistButton = document.getElementById('resetLinkedInChecklist');\n  if (resetLinkedInChecklistButton) {\n    resetLinkedInChecklistButton.addEventListener('click', function() {\n      if (confirm('Are you sure you want to reset your LinkedIn checklist progress?')) {\n        linkedinCheckboxes.forEach(checkbox => {\n          checkbox.checked = false;\n        });\n        updateLinkedInProgress();\n        saveLinkedInChecklistData();\n      }\n    });\n  }\n\n  // Save LinkedIn checklist\n  const saveLinkedInChecklistButton = document.getElementById('saveLinkedInChecklist');\n  if (saveLinkedInChecklistButton) {\n    saveLinkedInChecklistButton.addEventListener('click', function() {\n      saveLinkedInChecklistData();\n      alert('Your LinkedIn checklist progress has been saved!');\n    });\n  }\n\n  // Export LinkedIn checklist as CSV\n  const exportLinkedInChecklistButton = document.getElementById('exportLinkedInChecklist');\n  if (exportLinkedInChecklistButton) {\n    exportLinkedInChecklistButton.addEventListener('click', function() {\n      // Create CSV content\n      let csvContent = \"LinkedIn Profile Checklist Item,Status\\n\";\n\n      linkedinCheckboxes.forEach(checkbox => {\n        const label = document.querySelector(`label[for=\"${checkbox.id}\"]`).textContent;\n        const status = checkbox.checked ? \"Completed\" : \"Not Completed\";\n        csvContent += `\"${label}\",\"${status}\"\\n`;\n      });\n\n      // Create download link\n      const encodedUri = encodeURI(\"data:text/csv;charset=utf-8,\" + csvContent);\n      const link = document.createElement(\"a\");\n      link.setAttribute(\"href\", encodedUri);\n      link.setAttribute(\"download\", \"linkedin_checklist.csv\");\n      document.body.appendChild(link);\n\n      // Trigger download\n      link.click();\n\n      // Clean up\n      document.body.removeChild(link);\n    });\n  }\n\n  // Update LinkedIn progress\n  function updateLinkedInProgress() {\n    const total = linkedinCheckboxes.length;\n    const checked = Array.from(linkedinCheckboxes).filter(checkbox => checkbox.checked).length;\n    const percentage = Math.round((checked / total) * 100);\n\n    const progressBar = document.getElementById('linkedinProgressBar');\n    const progressText = document.getElementById('linkedinProgress');\n\n    if (progressBar) {\n      progressBar.style.width = `${percentage}%`;\n    }\n\n    if (progressText) {\n      progressText.textContent = `${percentage}%`;\n    }\n  }\n\n  // Save LinkedIn checklist data\n  function saveLinkedInChecklistData() {\n    const checklistData = {};\n\n    linkedinCheckboxes.forEach(checkbox => {\n      checklistData[checkbox.id] = checkbox.checked;\n    });\n\n    saveToLocalStorage('linkedinChecklist', JSON.stringify(checklistData));\n  }\n\n  // Load LinkedIn checklist data\n  function loadLinkedInChecklistData() {\n    const savedData = getFromLocalStorage('linkedinChecklist');\n\n    if (savedData) {\n      try {\n        const checklistData = JSON.parse(savedData);\n\n        linkedinCheckboxes.forEach(checkbox => {\n          if (checklistData[checkbox.id] !== undefined) {\n            checkbox.checked = checklistData[checkbox.id];\n          }\n        });\n      } catch (error) {\n        console.error('Error loading LinkedIn checklist data:', error);\n      }\n    }\n  }\n}\n\n/**\n * Set up elevator pitch builder\n */\nfunction setupElevatorPitchBuilder() {\n  // Elevator Pitch Builder Modal\n  const elevatorPitchButton = document.getElementById('openElevatorPitch');\n  const elevatorPitchModal = document.getElementById('elevatorPitchModal');\n\n  if (elevatorPitchButton && elevatorPitchModal) {\n    elevatorPitchButton.addEventListener('click', function() {\n      elevatorPitchModal.style.display = \"block\";\n      loadElevatorPitchData();\n    });\n  }\n\n  // Generate elevator pitch\n  const generateElevatorPitchButton = document.getElementById('generateElevatorPitch');\n  if (generateElevatorPitchButton) {\n    generateElevatorPitchButton.addEventListener('click', function() {\n      const intro = document.getElementById('elevatorIntro').value;\n      const value = document.getElementById('elevatorValue').value;\n      const goal = document.getElementById('elevatorGoal').value;\n      const callToAction = document.getElementById('elevatorCallToAction').value;\n\n      if (!intro || !value || !goal || !callToAction) {\n        alert('Please complete all fields to generate your elevator pitch.');\n        return;\n      }\n\n      const elevatorPitch = `${intro} ${value} ${goal} ${callToAction}`;\n\n      const elevatorPitchResult = document.getElementById('elevatorPitchResult');\n      if (elevatorPitchResult) {\n        elevatorPitchResult.textContent = elevatorPitch;\n      }\n\n      // Save elevator pitch data\n      saveElevatorPitchData();\n    });\n  }\n\n  // Copy elevator pitch to clipboard\n  const copyElevatorPitchButton = document.getElementById('copyElevatorPitch');\n  if (copyElevatorPitchButton) {\n    copyElevatorPitchButton.addEventListener('click', function() {\n      const elevatorPitchResult = document.getElementById('elevatorPitchResult');\n      const elevatorPitch = elevatorPitchResult.textContent;\n\n      if (!elevatorPitch) {\n        alert('Please generate an elevator pitch first.');\n        return;\n      }\n\n      navigator.clipboard.writeText(elevatorPitch).then(() => {\n        alert('Elevator pitch copied to clipboard!');\n      }).catch(err => {\n        console.error('Could not copy text: ', err);\n      });\n    });\n  }\n\n  // Practice elevator pitch\n  const practiceElevatorPitchButton = document.getElementById('practiceElevatorPitch');\n  if (practiceElevatorPitchButton) {\n    practiceElevatorPitchButton.addEventListener('click', function() {\n      const elevatorPitchResult = document.getElementById('elevatorPitchResult');\n      const elevatorPitch = elevatorPitchResult.textContent;\n\n      if (!elevatorPitch) {\n        alert('Please generate an elevator pitch first.');\n        return;\n      }\n\n      alert('Practice Mode: Read your elevator pitch out loud and time yourself. Aim for 30-60 seconds.');\n    });\n  }\n\n  // Save elevator pitch data\n  function saveElevatorPitchData() {\n    const elevatorPitchData = {\n      intro: document.getElementById('elevatorIntro').value,\n      value: document.getElementById('elevatorValue').value,\n      goal: document.getElementById('elevatorGoal').value,\n      callToAction: document.getElementById('elevatorCallToAction').value,\n      pitch: document.getElementById('elevatorPitchResult').textContent\n    };\n\n    saveToLocalStorage('elevatorPitchData', JSON.stringify(elevatorPitchData));\n  }\n\n  // Load elevator pitch data\n  function loadElevatorPitchData() {\n    const savedData = getFromLocalStorage('elevatorPitchData');\n\n    if (savedData) {\n      try {\n        const data = JSON.parse(savedData);\n\n        if (data.intro) document.getElementById('elevatorIntro').value = data.intro;\n        if (data.value) document.getElementById('elevatorValue').value = data.value;\n        if (data.goal) document.getElementById('elevatorGoal').value = data.goal;\n        if (data.callToAction) document.getElementById('elevatorCallToAction').value = data.callToAction;\n\n        if (data.pitch) {\n          const elevatorPitchResult = document.getElementById('elevatorPitchResult');\n          if (elevatorPitchResult) {\n            elevatorPitchResult.textContent = data.pitch;\n          }\n        }\n      } catch (error) {\n        console.error('Error loading elevator pitch data:', error);\n      }\n    }\n  }\n}\n\n// Initialize the page when DOM is ready\ndocument.addEventListener('DOMContentLoaded', initPage);\n\nexport default {\n  initPage\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.j = 371;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t371: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfed_to_industry\"] = self[\"webpackChunkfed_to_industry\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [121], () => (__webpack_require__(826)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","initPage","Accordion","init","triggerSelector","contentSelector","closeOthers","animateHeight","document","querySelectorAll","forEach","header","addEventListener","this","classList","toggle","content","nextElementSibling","style","maxHeight","toggleIcon","querySelector","textContent","scrollHeight","Tabs","tabsContainerSelector","tabButtonSelector","tabPanelSelector","activeClass","Testimonials","testimonialSelector","dotSelector","autoRotate","autoRotateInterval","button","e","getAttribute","checklistItems","progressBar","length","item","updateChecklistProgress","total","checked","Array","from","filter","percentage","Math","round","width","concat","setAttribute","progressText","setupResumeChecklist","valuePropositionButton","getElementById","valuePropositionModal","display","loadValuePropositionWorksheet","closeButtons","getElementsByClassName","i","modal","closest","generateValuePropositionButton","target","value","problem","skills","benefits","valueProposition","valuePropositionResult","saveWorksheetData","alert","copyValuePropositionButton","navigator","clipboard","writeText","then","err","worksheetData","industry","problems","transferableSkills","strengths","uniqueExperience","saveToLocalStorage","JSON","stringify","savedData","getFromLocalStorage","data","parse","error","setupValuePropositionWorksheet","achievementBuilderButton","achievementBuilderModal","generateStatementButton","challenge","action","result","actionVerb","statement","copyStatementButton","setupAchievementBuilder","linkedInChecklistButton","linkedInChecklistModal","loadLinkedInChecklistData","updateLinkedInProgress","linkedinCheckboxes","checkbox","saveLinkedInChecklistData","resetLinkedInChecklistButton","confirm","saveLinkedInChecklistButton","exportLinkedInChecklistButton","csvContent","label","id","status","encodedUri","encodeURI","link","createElement","body","appendChild","click","removeChild","checklistData","undefined","setupLinkedInChecklist","elevatorPitchButton","elevatorPitchModal","loadElevatorPitchData","generateElevatorPitchButton","intro","goal","callToAction","elevatorPitch","elevatorPitchResult","saveElevatorPitchData","copyElevatorPitchButton","practiceElevatorPitchButton","elevatorPitchData","pitch","setupElevatorPitchBuilder","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","r","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}